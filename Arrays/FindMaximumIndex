// { Driver Code Starts
import java.io.*;
import java.util.*;

class Difference {
    
	public static void main (String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
		while(t-->0){
		    int n = Integer.parseInt(br.readLine().trim()); // size of array
		    int arr[] = new int[n];
		    String inputLine[] = br.readLine().trim().split(" ");
		    for(int i=0; i<n; i++){
		        arr[i] = Integer.parseInt(inputLine[i]); // input elements of array
		    }
		    
		    MaxDifference obj = new MaxDifference();
		    
		    System.out.println(obj.maxIndexDiff(arr, n)); // print the result
		}
	}
}// } Driver Code Ends
class MaxDifference{
    
    // Function to find maximum difference of j-1
    // arr[]: input array
    // n: size of array
    static int maxIndexDiff(int arr[], int n) { 
        
        // Your code here
        int[] Lmin = new int[n];
        int[] Rmax = new int[n];
        
        // To populate the min element from left
        Lmin[0] = arr[0];
        for(int i=1;i<n;i++)
        {
            Lmin[i] = Math.min(arr[i],Lmin[i-1]);
        }
        
        // To populate the maximum element from right
        Rmax[n-1] = arr[n-1];
        for(int i=n-2;i>=0;i--)
        {
            Rmax[i] = Math.max(arr[i],Rmax[i+1]);
        }
        int maxDiff = 0;
        for(int i=0,j=0;i<n && j<n;)
        {
            if(Lmin[i]<=Rmax[j])
            {
                maxDiff = Math.max(maxDiff,j-i);
                j++;
            }
            else
            {
                i++;
            }
        }
        return maxDiff;
    }
}

